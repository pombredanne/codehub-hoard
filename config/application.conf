ingest {
	#Run job for following environment
	env = PUBLIC

	projects{
		#Elastic Index Name
		indexName = projects

		github{
			#Elastic doc type
			docType = project

			#Enterprise settings
      enterpriseurl = "https://github.boozallencsn.com/api/v3/"
      ent_accessToken =

      #Public settings
      publicurl = "https://api.github.com/"
      pub_accessToken =

			#orgs = "project-heimdall,GridIron,projectzion,fedspendingtransparency,boozallen,booz-allen-hamilton"
			orgs = "usdot-jpo-ode"
			httpReponsePerPage = 100
		}
	}

	code{
		#Elastic Index Name
		indexName = code
		sonar{
			#sonar local base url
			#api_local_base_url = "${sonar.server.url}/api/resources"
			#api_remote_base_url = "${sonar.server.url}/api/resources"
			api_local_base_url = "http://localhost:9000/api/resources"
			api_remote_base_url = "http://localhost:9000/api/resources"

			#sonar projects health metrics
			health_metrics="bugs,new_bugs,reliability_rating,vulnerabilities,new_vulnerabilities,security_rating,code_smells,new_code_smells,sqale_rating,sqale_index,sqale_debt_ratio,dupilicated_lines_density,lines_of_code,complexity,comments_lines_density,violations,new_violations"
		}
	}

	kafka{
		completion_topic = INGEST_QUEUE
		bootstrap_servers = "localhost:9092"
		producer{
			acks = all
			retries = "1"
			batch_size = "100"
			buffer_memory = "33554432"
			timeout = "30"
		}
		consumer{
			group_id = "HoardConsumerGroup"
			enable_auto_commit = "true"
			auto_commit_interval_ms = "1000"
			session_timeout_ms = "30000"
		}
	}
}
